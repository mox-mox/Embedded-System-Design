#which ports to use to provide telnet and gdb services
telnet_port 4444
gdb_port 3333
version
interface_list

#interface configuration
interface ft2232

reset_config srst_only

#jtag_device 4 0x1 0xF 0xE

ft2232_device_desc "Dual RS232 A"
ft2232_layout usbjtag
#ft2232_vid_pid 0x0403 0x6010  # must be used for OSes other than Windows

#we use an arm7tdmi little endian system and request an
#immediate halt after reset of the processor
#adapter_khz 8
jtag_rclk 5

jtag_nsrst_delay 200
jtag_ntrst_delay 200

jtag newtap sam9xe512 cpu -irlen 4 -expected-id 0x0792603f
target create sam9xe512.cpu arm926ejs -chain-position sam9xe512.cpu

sam9xe512.cpu configure -work-area-phys 0x00300000 -work-area-size 0x1000 -work-area-backup 1
#flash bank sam9xe512.flash.0 at91sam7 0 0 0 0 sam9xe512.cpu 0 0 0 0 0 0 0 18432
#flash bank sam9xe512.flash.1 at91sam7 0 0 0 0 sam9xe512.cpu 1 0 0 0 0 0 0 18432
#flash bank at91sam7 0 0 0 0 0 

#jtag newtap sam7se512 cpu -irlen 4 -expected-id 0x3f0f0f0f
#target create sam7se512.cpu arm7tdmi -chain-position sam7se512.cpu

#target arm7tdmi little run_and_init 0 arm7tdmi_r4
#flash bank sam7se512.flash.0 at91sam7 0 0 0 0 sam7se512.cpu 0 0 0 0 0 0 0 18432
#flash bank sam7se512.flash.1 at91sam7 0 0 0 0 sam7se512.cpu 1 0 0 0 0 0 0 18432

#sam7se512.cpu configure -work-area-phys 0x00200000 -work-area-size 0x4000 -work-area-backup 0

#flash info 0
#flash info 1

init 
halt            
reset_config srst_only 

arm7_9 dcc_downloads enable
#armv4_5 core_mode arm
sleep 10

set  AT91C_WDTC_WDMR     0xfffffd44;    #Watchdog Mode Register
set  AT91C_WDTC_WDDIS    0x00008000;    #Watchdog disable
set  AT91C_RSTC_RMR      0xfffffd08;    #Reset Mode Register
set  AT91C_RSTC_CR       0xfffffd00;    #Reset Control Register
set  AT91C_RSTC_URSTEN   0xa5000f01;    #User Reset Enable
set  AT91C_RSTC_RST      0xa500000d;    #Processor Reset + ...
set  AT91C_EFC0_FCR      0xfffffa04;    #MC Flash Command Register
set  MC_FCMD_SET_GP_NVM3 0x5a00030b;    #Set General Purpose NVM bit 3: enable boot from flash
set  MC_FCMD_CLR_GP_NVM3 0x5a00030c;    #Clear General Purpose NVM bit 3: enable boot from rom
set  MC_FCMD_GET_GP_NVM3 0x5a00030d;    #Get General Purpose NVM bit 3: enable boot from rom

set  AT91C_MATRIX_MRCR   0xffffef00;    #Bus Matrix Master Remap Control Register
set  AT91C_MATRIX_DIS    0x00000000;    #RCBx: Remap Command Bit for AHB Master 

set  AT91C_CKGR_MOR      0xfffffc20;    #PMC Clock Generator Main Oscillator Register
set  ENABLE_MAIN_OSZI    0x00004001;    # MOSCEN + OSCOUNT = 40
set  AT91C_PMC_MCKR      0xfffffc30;    # PMC Master Clock Register
set  SELECT_MAIN_CLK     0x00000001;    #Master Clock is Processor Clock, no prescaler; main clock selected
set  AT91C_CKGR_PLLAR    0xfffffc28;    #PMC Clock Generator PLL A Register 
set  SET_198MHZ          0x2060bf09;    #DIVA = 9, MULA = 60 -> CLK = (16*6)/9 * 18,432MHz = 196,6 MHZ 
set  MAIN_CLK_DIV4       0x00000009;    #Select prescaler (divide by 4)
set  PLLA_CLK_DIV4       0x0000000a;    #Select PLLA (divide by 4)

set  AT91C_EBI_CSA       0xffffef1c;    #EBI Chip Select Assignment Register
set  EBI_CSA1_SDRAM      0x00010002;    #EBI Chip select1 (0x20000000) -> SDRAM, 3,3V low drive
set  SDRAM_BASE_ADDRESS  0x20000000;     
set  AT91C_SDRAMC_CR     0xffffea08;    #SDRAMC Configuration Register
set  SDRAM_CONFIG        0x852272d9;    #Configure SDRAM 512M : NC = 10; NR = 13; BANK = 4, CAS_Latency = 2; DBW = 16 Bit
                                        #change for SDRAM 256M !!!
set  AT91C_SDRAMC_MR     0xffffea00;    #SDRAMC Mode Register
set  NORMAL_MODE         0x00000000;    #Normal mode. Any access to the SDRAM is decoded normally. 
set  NOP                 0x00000001;    #The SDRAM Controller issues a NOP command when the SDRAM device is accessed regardless of the cycle. 
set  All_BANKS_PRECHARGE 0x00000002;    #The SDRAM Controller issues an “All Banks Precharge” command when the SDRAM device is accessed regardless of the cycle.
set  LOAD_MODE_REGISTER  0x00000003;    #The SDRAM Controller issues a “Load Mode Register” command when the SDRAM device is accessed regardless of the cycle.
set  AUTO_REFRESH        0x00000004;    #The SDRAM Controller issues an “Auto-Refresh” Command when the SDRAM device is accessed regardless of the cycle.
set  AT91C_SDRAMC_TR     0xffffea04;    #SDRAMC Refresh Timer Register
set  REFRESH_TIMER_VALUE 0x000002b6;          

set FLASH_ADR            0x00200000;    #start address of FLASH ram

#Disable watchdog and enable main oscillator
mww $AT91C_WDTC_WDMR $AT91C_WDTC_WDDIS;	   # disable watchdog
sleep 10
mww $AT91C_RSTC_RMR  $AT91C_RSTC_URSTEN;   # enable user reset
sleep 10
mww $AT91C_EFC0_FCR  $MC_FCMD_SET_GP_NVM3; # enable boot from flash
sleep 10
echo -n "configure main oszillator + PLL  "
mww $AT91C_CKGR_MOR $ENABLE_MAIN_OSZI     ;# CKGR_MOR : enable the main oscillator
sleep 20                                  ;# wait 20 ms
mww $AT91C_PMC_MCKR $SELECT_MAIN_CLK         ;# PMC_MCKR : switch to main oscillator
sleep 10                          		  ;# wait 10 ms
mww  $AT91C_CKGR_PLLAR  $SET_198MHZ       ;# CKGR_PLLAR: Set PLLA Register for 198.656 MHz
sleep 20                                  ;# wait 20 ms
mww $AT91C_PMC_MCKR $MAIN_CLK_DIV4        ;# PMC_MCKR : Select prescaler (divide by 4)
sleep 10                                  ;# wait 10 ms      
mww $AT91C_PMC_MCKR $PLLA_CLK_DIV4        ;# PMC_MCKR : Select prescaler (divide by 4)
sleep 10                                  ;# wait 10 ms      
   
# Increase JTAG Speed to 6 MHz if RCLK is not supported
jtag_rclk 3000
arm7_9 dcc_downloads enable               ;# Enable faster DCC downloads 
echo -n "configure SDRAM address space + SDRAM controller"
#configure SDRAM address space + SDRAM controller 
mww $AT91C_EBI_CSA      $EBI_CSA1_SDRAM   ;# EBI_CSA  : Assign EBI Chip Select 1 to SDRAM, VDDIOMSEL set for +3V3 memory
mww $AT91C_SDRAMC_CR    $SDRAM_CONFIG     ;# SDRAMC_CR : Configure SDRAM

echo -n "init SDRAM  "
mww $AT91C_SDRAMC_MR    $NOP                  ;# SDRAMC_MR : issue a NOP command
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_MR    $All_BANKS_PRECHARGE  ;# SDRAMC_MR : issue an 'All Banks Precharge' command
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_MR    $AUTO_REFRESH         ;# SDRAMC_MR : issue 8 x 'Auto-Refresh' Command
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_MR    $AUTO_REFRESH         ;
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_MR    $AUTO_REFRESH         ;
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_MR    $AUTO_REFRESH         ;
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_MR    $AUTO_REFRESH         ;
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_MR    $AUTO_REFRESH         ;
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_MR    $AUTO_REFRESH         ;
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_MR    $AUTO_REFRESH         ;
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_MR    $LOAD_MODE_REGISTER   ;# SDRAMC_MR : issue a 'Load Mode Register' command
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_MR    $NORMAL_MODE          ;# SDRAMC_MR : normal mode
mww $SDRAM_BASE_ADDRESS 0
mww $AT91C_SDRAMC_TR    $REFRESH_TIMER_VALUE  ;# SDRAMC_TR : Set refresh timer count to 7us
echo -n "init SDRAM finished  "	
	
arm7_9 fast_memory_access enable
#load_image ../en5flasher.bin 0x20000000
#verify_image ../main.bin 0x20000000
#reset init
load_image ../main.bin 0x20000000 bin
#verify_image ../main.bin 0x20000000 bin
resume 0x20000000
sleep 2000    
shutdown


#load_image ../main.bin [expr 0x200000 - 512] 512 1024

#flash write_image ../main.bin $flash_adr 0 512

#help fast


#flash write_bank 0 ../main.bin 0


#mww $AT91C_MATRIX_MRCR  $AT91C_MATRIX_DIS;   # disable remap
#sleep 10
#mww $AT91C_EFC0_FCR  $MC_FCMD_SET_GP_NVM3; # enable boot from flash
#mww 0xfffffa04 0x5a00030b       ;
#sleep 10
#mww $AT91C_EFC0_FCR  $MC_FCMD_GET_GP_NVM3; # read General Purpose NVM bit 3

#echo  "Program FLASH wait ..."

#echo -n "ADR 20000000: "
#mdw 0x20000000          ;
#echo -n "ADR 20000004: "
#mdw 0x20000004          ;
#echo -n "ADR 20000008: "
#mdw 0x20000008         ;
#echo -n "ADR 2000000c: "
#mdw 0x2000000c         ;
#echo -n "ADR 20000100: "
#mdw 0x20000100         ;

#echo -n "GPNVM3: "
#mdw 0xfffffa0c       
#echo -n "ADR 00000000: "
#mdw 0x00000000          ;

#sleep 100
#mww $AT91C_RSTC_CR  $AT91C_RSTC_RST;   # processor reset

#sleep 30
#init 
#reset run
#mww $AT91C_RSTC_CR  $AT91C_RSTC_RST;   # processor reset
#shutdown




