#which ports to use to provide telnet and gdb services
telnet_port 4444
gdb_port 3333
version
interface_list

#interface configuration
interface ft2232

reset_config srst_only

#jtag_device 4 0x1 0xF 0xE

ft2232_device_desc "Dual RS232 A"
ft2232_layout usbjtag
#ft2232_vid_pid 0x0403 0x6010  # must be used for OSes other than Windows

#we use an arm7tdmi little endian system and request an
#immediate halt after reset of the processor
adapter_khz 8
jtag newtap sam7se512 cpu -irlen 4 -expected-id 0x3f0f0f0f
target create sam7se512.cpu arm7tdmi -chain-position sam7se512.cpu

#target arm7tdmi little run_and_init 0 arm7tdmi_r4
flash bank sam7se512.flash.0 at91sam7 0 0 0 0 sam7se512.cpu 0 0 0 0 0 0 0 18432
flash bank sam7se512.flash.1 at91sam7 0 0 0 0 sam7se512.cpu 1 0 0 0 0 0 0 18432

sam7se512.cpu configure -work-area-phys 0x00200000 -work-area-size 0x4000 -work-area-backup 0

#flash info 0
#flash info 1

init									
halt            
reset_config srst_only 

#arm7_9 dcc_downloads enable
#armv4_5 core_mode arm
wait_halt
sleep 10

set  AT91C_WDTC_WDMR     0xfffffd44;    #Watchdog Mode Register
set  AT91C_WDTC_WDDIS    0x00008000;    #Watchdog disable
set  AT91C_RSTC_RMR      0xfffffd08;    #Reset Mode Register
set  AT91C_RSTC_URSTEN   0xa5000001;    #User Reset Enable
set  AT91C_EFC0_FCR      0xffffff64;    #MC Flash Command Register
set  MC_FCMD_SET_GP_NVM2 0x5a00020b;    #Set General Purpose NVM bit 2: enable boot from flash
set  AT91C_PMC_MOR       0xfffffc20;    #Main Oscillator Register
set  AT91C_CKGR_MOSCEN   0x00000601;    #Main Oscillator Enable
set  AT91C_PMC_PLLR      0xfffffc2c;    #PLL Register
set  AT91C_PMC_PLLR_CFG  0x00481c0e;    #PLL Register configuration: mul = 0x48 ; div = 0e 18,4.. MHz * 72/14 = 96, .. MHz
set  AT91C_PMC_MCKR      0xfffffc30;    #Master Clock Register
set  AT91C_PMC_PRES_CLK_2_PLL 0x00000007; #Selected clock from PLL divided by 2
set  AT91C_EFC_FMR0      0xffffff60;    #MC Flash Mode Register0
set  AT91C_EFC_FMR1      0xffffff70;    #MC Flash Mode Register0
set  AT91C_MC_FWS_1FWS   0x00720100;    #2 cycles for Read, 3 for Write operations; 72 = 1.5 * 48 MHz

#Disable watchdog and enable main oscillator
mww $AT91C_WDTC_WDMR $AT91C_WDTC_WDDIS;	   # disable watchdog
mww $AT91C_RSTC_RMR  $AT91C_RSTC_URSTEN;   # enable user reset
#mww $AT91C_EFC0_FCR  $MC_FCMD_SET_GP_NVM2;# enable boot from flash
mww $AT91C_PMC_MOR   $AT91C_CKGR_MOSCEN;   # enable the main oscillator
sleep 10
mww $AT91C_PMC_PLLR $AT91C_PMC_PLLR_CFG; 	  # CKGR_PLLR: 96.1097 Mhz
sleep 10			          
mww $AT91C_PMC_MCKR $AT91C_PMC_PRES_CLK_2_PLL;	  # PMC_MCKR : MCK = PLL / 2 ~= 48 MHz
sleep 10			          
mww $AT91C_EFC_FMR0 $AT91C_MC_FWS_1FWS;	  # MC_FMR: flash mode (FWS=1,FMCN=72) VDD_CORE = 1.8V
mww $AT91C_EFC_FMR1 $AT91C_MC_FWS_1FWS;	  # MC_FMR: flash mode (FWS=1,FMCN=72) VDD_CORE = 1.8V

adapter_khz 9800
arm7_9 dcc_downloads enable
arm7_9 fast_memory_access enable

flash info 0
flash info 1
sleep 30

echo  "Program FLASH wait ..."
flash write_image ../main.bin 0x00100000
sleep 30
reset
shutdown




